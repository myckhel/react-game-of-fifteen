{"version":3,"sources":["components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Board","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","DIM_MAX","DIM_MIN","componentWillMount","state","level","d","init","setState","board","draw","choose","b_size","i","j","won","checked","incr","handleClick","e","tile","target","innerHTML","move","selectedTile","parseInt","tile_r","tile_c","blank_r","blank_c","legal","up_r","up_c","down_r","down_c","left_r","left_c","right_r","right_c","swap","temp","Tile","react_default","a","createElement","value","num","onClick","className","concat","Menu","clicks","handleReset","_this2","tiles","map","row","col","key","v","Component","App","Greet","react","handleProceed","Choose","onChange","handleLevel","name","data-style","required","handleChoose","greet","components_Board","handleRestart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3be795d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Board extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      level: props.level,\r\n      board: [],\r\n      won: false,\r\n    }\r\n  }\r\n\r\n  DIM_MAX = 9; DIM_MIN = 3;\r\n  // properties\r\n  tile_r; tile_c; blank_r; blank_c;\r\n\r\n  componentWillMount = () => {\r\n    if (this.state.level < this.DIM_MIN || this.d > this.DIM_MAX) {\r\n      // print board must be between DIM_MIN * DIM_MIN and DIM_MAX * DIM_MAX\r\n      return false\r\n    }\r\n    this.init()\r\n  }\r\n\r\n  init = () => {\r\n    this.setState({board: this.draw(), choose: false})\r\n  }\r\n\r\n  draw = () => {\r\n    let board = []\r\n    let b_size = this.state.level * this.state.level - 1\r\n    for (let i = 0; i < this.state.level; i++) {\r\n      board[i] = []\r\n      for (let j = 0; j < this.state.level; j++) {\r\n        board[i][j] = b_size--\r\n      }\r\n    }\r\n\r\n    if (this.state.level % 2 === 0) {\r\n        board[this.state.level - 1][this.state.level - 2] = 2\r\n        board[this.state.level - 1][this.state.level - 3] = 1\r\n    }\r\n\r\n    return board\r\n  }\r\n\r\n  won = () => {\r\n    let checked = false\r\n    let incr = 1\r\n\r\n    for (let i = 0; i < this.state.level; i++) {\r\n      for (let j = 0; j < this.state.level; j++) {\r\n        // check if current tile is 0 and tile is at the end of the board\r\n        if (((i + 1) * (j + 1) === (this.state.level * this.state.level)) && this.state.board[i][j] === 0) {\r\n          incr = 0\r\n        }\r\n\r\n        if (this.state.board[i][j] !== incr) {\r\n          checked = false\r\n          return false\r\n        } else {\r\n          checked = true\r\n        }\r\n        incr++\r\n      }\r\n    }\r\n    return checked\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    let tile = e.target.innerHTML\r\n    this.move(tile)\r\n  }\r\n\r\n  move = (selectedTile) => {\r\n    selectedTile = parseInt(selectedTile)\r\n    for (let i = 0; i < this.state.level; i++) {\r\n      for (let j = 0; j < this.state.level; j++) {\r\n        if (this.state.board[i][j] === selectedTile) {\r\n          this.tile_r = i\r\n          this.tile_c = j\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.state.level; i++) {\r\n      for (let j = 0; j < this.state.level; j++) {\r\n        if (this.state.board[i][j] === 0) {\r\n          this.blank_r = i\r\n          this.blank_c = j\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    let legal = false;\r\n    let up_r = this.blank_r - 1;\r\n    let up_c = this.blank_c;\r\n    let down_r = this.blank_r + 1;\r\n    let down_c = this.blank_c;\r\n    let left_r = this.blank_r;\r\n    let left_c = this.blank_c - 1;\r\n    let right_r = this.blank_r;\r\n    let right_c = this.blank_c + 1;\r\n    let tile = this.state.board[this.tile_r][this.tile_c];\r\n\r\n    try {\r\n      if(tile === this.state.board[up_r][up_c]){\r\n        legal = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n\r\n    try {\r\n      if(tile === this.state.board[down_r][down_c]){\r\n        legal = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n\r\n    try {\r\n      if(tile === this.state.board[left_r][left_c]){\r\n        legal = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n    try {\r\n      if(tile === this.state.board[right_r][right_c]){\r\n        legal = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n    // this.swap();\r\n    if(legal) {\r\n      this.swap();\r\n      return true;\r\n    } else {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  swap = () => {\r\n    let temp = this.state.board[this.tile_r][this.tile_c]\r\n    this.setState( state => {\r\n      state.board[this.tile_r][this.tile_c] = state.board[this.blank_r][this.blank_c]\r\n      return {board: state.board}\r\n    })\r\n    this.setState( state => {\r\n      state.board[this.blank_r][this.blank_c] = temp;\r\n      return {board: state.board}\r\n    })\r\n\r\n    if (this.won()) {\r\n      this.setState({\r\n        won: true\r\n      })\r\n    }\r\n  }\r\n\r\n  Tile = (props) => (\r\n    <div\r\n      value={props.num}\r\n      onClick={this.handleClick}\r\n      className={`tile col btn btn-${props.num === 0 ? 'danger' : 'info'}`}\r\n    >{props.num}</div>\r\n  )\r\n\r\n  Menu = () => (\r\n    <div className=\"row align-item-center\">\r\n      <div className=\"col-xs-4 pull-left\">\r\n        <button className=\"btn\" onClick={this.init} ><h3> Restart Level <i className=\"restart\"></i> </h3></button>\r\n      </div>\r\n      <div className=\"col-xs-4 pull-right\">\r\n        <button className=\"btn\" onClick={this.props.clicks.handleReset} ><h3> Restart Game <i className=\"reset\"></i> </h3></button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    let tiles = this.state.board.map((row, i) => {\r\n      return row.map((col, j) => {\r\n        return <this.Tile num={col} key={i+j} />\r\n      })\r\n    })\r\n    tiles = tiles.map((v, i) => {\r\n      return <div className=\"row\" key={i}>{v}</div>\r\n    })\r\n\r\n    return (\r\n      <div className=\"board\">\r\n        {this.state.won ?\r\n        <h1>Congratulations You Won!!!</h1>\r\n        : tiles\r\n        }\r\n        <this.Menu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component, Fragment } from 'react';\nimport Board from './components/Board'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      greet: true,\n      choose: false,\n      level: 3\n    }\n  }\n\n  componentWillMount = () => {\n\n  }\n\n  Greet = () => {\n    return (\n      <Fragment>\n        <h1>Welcome To Game Of Fifteen</h1>\n        <button className=\"btn\" onClick={this.handleProceed} ><h3> Proceed </h3></button>\n      </Fragment>\n    )\n  }\n\n  Choose = () => (\n    <Fragment>\n      <h1 className=\"\">Choose Difficulty</h1>\n      <div className=\"form-group\">\n        <div className=\"col-md-12\">\n          <select onChange={this.handleLevel} name=\"level\" className=\"col-xs-6 col-sm-4 col-md-6 col-lg-9\" data-style=\"btn-success\" required>\n            <option value=\"3\">Easy</option>\n            <option value=\"4\">Normal</option>\n            <option value=\"5\">hard</option>\n            <option value=\"6\">Professional</option>\n            <option value=\"7\">Worldclass</option>\n            <option value=\"8\">Nightmare</option>\n            <option value=\"9\">Hell</option>\n          </select>\n          <button className=\"btn\" onClick={this.handleChoose} ><h3> Choose </h3></button>\n        </div>\n      </div>\n    </Fragment>\n  )\n\n  handleLevel = (e) => {\n    let level = parseInt(e.target.value)\n    this.setState({level})\n  }\n\n  handleChoose = () => {\n    this.setState({choose: false})\n  }\n\n  handleProceed = () => {\n    this.setState({\n      greet: false,\n      choose: true\n    })\n  }\n\n  handleReset = () => {\n    this.setState({\n      choose: true,\n      level: 3\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.state.greet ? <this.Greet />\n          : this.state.choose ? <this.Choose />\n          : <Board\n              level={this.state.level}\n              clicks={{\n                handleRestart: this.handleChoose,\n                handleReset: this.handleReset\n              }}\n            />\n          }\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/styles/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}